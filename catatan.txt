http://172.16.13.94:7000/catatan.txt

List VLAN : https://s.id/sistefa


### Bikin VM CT

- Klik Create CT
  - pilih node [misal tefa]
  - ketik hostname, password, confirm password, load public key
- klik next (template)
  - pilih template pada dropdown
- klik next (Root Disk)
  - Root disk : 20
- klik next (CPU)
  - CPU core : 1
- klik next (Memory)
  - Memory : 256
  - Swap : 256
- klik next (Network)
  - VLAN tag : [misal 310]
  - IPv4 (static) : 
    - CIDR : 192.168.10.10/24
    - Gateway : 192.168.10.1
- klik next (DNS)
- klik next (konfirm), pastikan semua konfig sudah betul
- klik finish


## VIM

yy <- copy baris
p <- paste
:wq <- keluar simpan
:q! <- keluar  tanpa simpan
dd <- cut
3dd <- cut 3 baris
3yy <- copy 3 baris
/sapi <- search
n <- kata sapi berikutnya
:%s/sapi/belalang <- replace

## NANO

nano [namafile]

^O <- save
^X <- keluar
^K <- cut
^U <- paste
^W <- cari
^\ <- replace

## perintah2 lain

htop, top <- penggunan cpu

df -h <- melihat partisi

ip link <- interface jaringan yang ada

ip add <- melihat ip address

## TCP/IP

su - <- masuk keroot

enp0s3

vim /etc/network/interfaces

systemctl restart networking

## package manager

cp /etc/apt/sources.list /etc/apt/sources.list.bak

less /etc/apt/sources.list


ftp.debian.org/debian

sed -i 's/ftp.debian.org/kartolo.sby.datautama.net.id/g' /etc/apt/sources.list

apt update

## SSH

apt install -y ssh-server

systemctl status ssh

ssh username@ip-server

### eksekusi di laptop
----------------------------
ssh-keygen

ssh-copy-id username@ip-server
----------------------------


vim /etc/ssh/sshd_config

uncomment
Port 22

edit
Port 2200

systemctl restart ssh

ssh -p 2200 username@ip-server

## Web Server

apt install -y apache2 libapache2-mod-php

systemctl status apache2

cd /var/www/html
vim info.php

<?php
	phpinfo();
?>

# Konfigurasi VirtualHost

## buat direktori untuk domain

mkdir /var/www/[domain]

## isi dengan sebuah file index.html

cd /var/www/[domain]
touch index.html
nano index.html

<p>
ini web server saya : nama kamu
</p>

## buat konfigurasi virtualhost untuk domain yang dibuat

cd /etc/apache2/sites-available
nano [domain].conf

```
<VirtualHost *:80>
    ServerAdmin admin@mail.com     
    ServerName [domain]       
    DocumentRoot /var/www/[domain]     
    ErrorLog ${APACHE_LOG_DIR}/[domain]-error.log
    CustomLog ${APACHE_LOG_DIR}/[domain]-access.log combined
</VirtualHost>
```

## aktifkan file konfigurasi virtualhost

a2ensite [domain]

## matikan file konfigurasi virtualhost bawaan apache2 (jangan dieksekusi dulu)

a2dissite 000-default.conf

## verifikasi file konfigurasi pada apache2

apache2ctl configtest

## restart service apache2 pada server

systemctl restart apache2

## verifikasi web apache2 pada terminal

apt install -y curl

nano /etc/hosts

**add**
```
[ip-server] [domain]
```

curl http://[domain]

## verifikasi web apache2 pada web browser client

### eksekusi di laptop/pc lokal

nano /etc/hosts

**add**
```
[ip-server] [domain]
```

http://[domain]

### eksekusi di node01,node02

cp /etc/apt/sources.list /etc/apt/sources.list.bak

less /etc/apt/sources.list

sed -i 's/ftp.debian.org/kartolo.sby.datautama.net.id/g' /etc/apt/sources.list

apt update

apt install -y apache2

echo "ini samsul di node01" > /var/www/html/index.html

### eksekusi di master

systemctl stop apache2
systemctl disable apache2
systemctl status apache2

apt install nginx -y

cd /etc/nginx/sites-enabled

nano default

```
location / {
		#
		#
		proxy_pass http://192.168.200.20/;
}
```

nginx -t
systemctl restart nginx
systemctl status nginx

http://[ip-server-master]

nano default

```
location /beli {
		#
		#
		proxy_pass http://192.168.200.30/;
}
```
```

### masih di master

systemctl stop nginx
systemctl disable nginx
systemctl status nginx

apt install haproxy -y

cp haproxy.cfg{,.orig}

nano haproxy.cfg

```
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend www
	bind 192.168.200.10:80
	default_backend yadika-backend

backend yadika-backend
	balance roundrobin
	mode http
    stats enable
    stats uri /haproxy?status
	server node01 192.168.200.20:80 check
	server node02 192.168.200.30:80 check

```

nano /etc/rsyslog.conf

hilangkan pagar

```
module(load="imudp")
input(type="imudp" port="514")
```

systemctl restart rsyslog
systemctl status rsyslog
systemctl restart haproxy
systemctl status haproxy



